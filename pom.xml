<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ghw</groupId>
    <artifactId>minibox</artifactId>
    <version>1.0.0.RELEASE</version>
    <modules>
        <module>minibox-gateway</module>
        <module>minibox-common</module>
        <module>minibox-service</module>
    </modules>

    <packaging>pom</packaging>

    <parent>
        <artifactId>spring-boot-starter-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>2.3.0.RELEASE</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <skipTests>true</skipTests>
        <java.version>1.8</java.version>
    </properties>
    <!--注意 dependencyManagement 这个标签，在这个标签里的依赖不会被实际引入，只是管理子工程里实际引入了这些依赖的版本-->
    <dependencyManagement>
        <dependencies>
            <!--自定义封装模块-->
            <dependency>
                <groupId>com.ghw</groupId>
                <artifactId>minibox-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--Spring Boot 基础组件-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>2.3.0.RELEASE</version>
            </dependency>
            <!--Spring Cloud 相关依赖 注意这里type是pom，要用里面的还要点进去实际声明引入-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Hoxton.SR5</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- spring-cloud-starter-gateway
            注意spring-boot-starter-web和spring-cloud-starter-gateway不能同时引入
            因为gateway用的是webflux，而web用的是webmvc，会冲突-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-gateway</artifactId>
                <version>2.2.0.RELEASE</version>
            </dependency>
            <!--Spring Cloud Alibaba 相关依赖 注意这里type是pom，要用里面的还要点进去实际声明引入-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>2.2.3.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--集成Druid连接池-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>1.1.24</version>
            </dependency>
            <!-- Hutool工具包 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>5.4.0</version>
            </dependency>
            <!--Springfox swagger官方Starter-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>3.0.0</version>
            </dependency>
            <!-- MyBatis starter-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>3.4.2</version>
            </dependency>
            <!--Mysql数据库驱动-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.18</version>
            </dependency>
            <!--SpringData工具包-->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-commons</artifactId>
                <version>2.3.0.RELEASE</version>
            </dependency>
            <!-- SpringData-Redis -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>2.3.0.RELEASE</version>
            </dependency>
            <!-- Pool-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>2.9.0</version>
            </dependency>
            <!--JWT(Json Web Token)登录支持-->
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>8.16</version>
            </dependency>
            <!-- 邮件验证码-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-email</artifactId>
                <version>1.5</version>
            </dependency>
            <!--简化对象封装工具-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.16.18</version>
                <optional>true</optional>
            </dependency>
            <!--七牛云对象存储-->
            <dependency>
                <groupId>com.qiniu</groupId>
                <artifactId>qiniu-java-sdk</artifactId>
                <version>[7.3.0, 7.3.99]</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <!--注意pluginManagement这个标签，和dependencyManagement是一个道理，只是声明，并不会实际引入
        所以工程在使用maven打包的时候，如果打包失败，查看子工程实际引入这个构建工具时，是否被这个标签包着
        如果是，那么删掉即可-->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <fork>true</fork>
                        <addResources>true</addResources>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>


</project>