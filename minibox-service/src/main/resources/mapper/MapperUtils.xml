<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ghw.minibox.mapper.MapperUtils">


    <resultMap id="countMap" type="com.ghw.minibox.entity.MbPost">
        <result property="countComment" column="countComment"/>
        <result property="id" column="tid"/>
    </resultMap>

    <select id="countComment" resultMap="countMap">
        SELECT
        tid,
        COUNT(*) AS countComment
        FROM mb_comment
        WHERE tid IN
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        GROUP BY tid;
    </select>


    <select id="countGameNum" resultType="map">
        SELECT g.id,
               g.`name`,
               g.cover_img,
               g.price,
               g.description,
               (SELECT COUNT(*) FROM mb_order WHERE uid = o.uid) AS game_num
        FROM mb_game AS g
                 LEFT JOIN mb_order AS o ON (o.order_game_id = g.id)
        WHERE o.uid = #{id}
    </select>


    <resultMap type="com.ghw.minibox.entity.MbPost" id="commentInPostMap">
        <!--帖子内容，帖子ID、帖子标题、帖子内容、帖子发表时间-->
        <id property="id" column="post_id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="coverImg" column="cover_img" jdbcType="VARCHAR"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <!--是谁发的帖子，作者ID、作者昵称、作者等级-->
        <association property="mbUser" javaType="com.ghw.minibox.entity.MbUser">
            <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        </association>
        <!--帖子里的所有评论，包括评论ID、评论内容、评论时间-->
        <collection property="commentList" ofType="com.ghw.minibox.entity.MbComment">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="createDate" column="create_date" jdbcType="TIMESTAMP"/>
        </collection>
    </resultMap>

    <select id="queryUserAllCommentInPost" resultMap="commentInPostMap">
        SELECT c.content,
               c.id,
               c.create_date,

               p.id AS post_id,
               p.cover_img,
               p.uid,
               p.title,

               u.nickname
        FROM mb_comment AS c
                 LEFT JOIN mb_post AS p ON (p.id = c.tid)
                 LEFT JOIN mb_user AS u ON (u.id = p.uid)
        WHERE c.uid = #{uid}
    </select>


</mapper>