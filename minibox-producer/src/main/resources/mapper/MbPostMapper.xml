<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ghw.minibox.mapper.MbPostMapper">
    <!-- 1.通过实体作为筛选条件查询-->
    <resultMap type="com.ghw.minibox.entity.MbPost" id="MbPostMap">
        <!--帖子内容，帖子ID、帖子标题、帖子内容、帖子发表时间-->
        <id property="tid" column="tid" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="content" column="post_content" jdbcType="VARCHAR"/>
        <result property="coverImg" column="cover_img" jdbcType="VARCHAR"/>
        <result property="createDate" column="create_date" jdbcType="TIMESTAMP"/>
        <!--是谁发的帖子，作者ID、作者昵称、作者等级-->
        <association property="mbUser" javaType="com.ghw.minibox.entity.MbUser">
            <id property="uid" column="author_id" jdbcType="INTEGER"/>
            <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
            <result property="level" column="level" jdbcType="VARCHAR"/>
            <!--作者的头像链接-->
            <association property="mbPhoto" javaType="com.ghw.minibox.entity.MbPhoto">
                <result property="photoLink" column="author_photo_link" jdbcType="VARCHAR"/>
            </association>
        </association>
        <!--版块信息-->
        <association property="mbBlock" javaType="com.ghw.minibox.entity.MbBlock">
            <id property="bid" column="block_id"/>
            <result property="name" column="block_name"/>
        </association>
        <!--帖子里的所有评论，包括评论ID、评论内容、评论时间-->
        <collection property="commentList" ofType="com.ghw.minibox.entity.MbComment">
            <id property="cid" column="comment_cid" jdbcType="INTEGER"/>
            <result property="content" column="comment_content" jdbcType="VARCHAR"/>
            <result property="createDate" column="comment_date" jdbcType="TIMESTAMP"/>
            <!--每条评论是谁发的，包含评论人的ID、评论人昵称、评论人等级-->
            <association property="mbUser" javaType="com.ghw.minibox.entity.MbUser">
                <id property="uid" column="comment_user_id" jdbcType="INTEGER"/>
                <result property="nickname" column="comment_user_nickname" jdbcType="VARCHAR"/>
                <result property="level" column="comment_user_level" jdbcType="VARCHAR"/>
                <!--评论人的头像的链接-->
                <association property="mbPhoto" javaType="com.ghw.minibox.entity.MbPhoto">
                    <result property="photoLink" column="comment_user_photo_link" jdbcType="VARCHAR"/>
                </association>
            </association>
            <!--每条评论里的回复，包括回复ID、回复日期、回复内容、回复人的UID、回复了谁-->
            <collection property="replyList" ofType="com.ghw.minibox.entity.MbReply">
                <id property="rid" column="rid" jdbcType="INTEGER"/>
                <result property="replyDate" column="reply_date" jdbcType="TIMESTAMP"/>
                <result property="replyContent" column="reply_content" jdbcType="VARCHAR"/>
                <result property="replyUid" column="who_post_this_reply" jdbcType="INTEGER"/>
                <result property="replyWho" column="this_reply_to_who" jdbcType="INTEGER"/>
                <!--回复人ID、昵称-->
                <association property="mbUser" javaType="com.ghw.minibox.entity.MbUser">
                    <id property="uid" column="reply_user_uid" jdbcType="INTEGER"/>
                    <result property="nickname" column="reply_user_nickname" jdbcType="VARCHAR"/>
                </association>
            </collection>
        </collection>
    </resultMap>
    <select id="queryAll" resultMap="MbPostMap">
        SELECT
        mp.tid,
        mp.title,
        mp.content AS post_content,
        mp.create_date,
        mp.cover_img,

        mu.uid AS author_id,
        mu.nickname,

        author_photo_link.link AS author_photo_link,

        mc.cid AS comment_cid,
        mc.content AS comment_content,
        mc.create_date AS comment_date,

        comment_user_photo.link AS comment_user_photo_link,

        mulist.uid AS comment_user_id,
        mulist.nickname AS comment_user_nickname,
        mulist.`level` AS comment_user_level,

        mr.rid,
        mr.reply_date,
        mr.reply_content,
        mr.reply_uid AS who_post_this_reply,
        mr.reply_who AS this_reply_to_who,

        reply_user.uid AS reply_user_uid,
        reply_user.nickname AS reply_user_nickname,

        post_detail_cover_img.link AS post_detail_cover_img_link,

        post_block.bid AS block_id,
        post_block.`name` AS block_name

        FROM mb_post mp
        LEFT JOIN mb_user AS mu ON (mp.uid = mu.uid)
        LEFT JOIN mb_photo AS author_photo_link ON (author_photo_link.uid = mu.uid)
        LEFT JOIN mb_comment AS mc ON (mc.tid = mp.tid)
        LEFT JOIN mb_photo AS comment_user_photo ON (mc.uid = comment_user_photo.uid)
        LEFT JOIN mb_user AS mulist ON (mc.uid = mulist.uid)
        LEFT JOIN mb_reply AS mr ON (mr.reply_in_comment = mc.cid)
        LEFT JOIN mb_user AS reply_user ON (reply_user.uid = mr.reply_uid)
        LEFT JOIN mb_photo AS post_detail_cover_img ON (post_detail_cover_img.tid = mp.tid)
        LEFT JOIN mb_block AS post_block ON (post_block.bid = mp.bid)
        <where>
            <if test="tid != null">
                mp.tid = #{tid}
            </if>
            <if test="uid != null">
                AND mp.uid = #{uid}
            </if>
            <if test="title != null and title != ''">
                AND mp.title = #{title}
            </if>
        </where>
        ORDER BY mp.create_date DESC;
    </select>


    <!-- 1.end -->
    <resultMap type="com.ghw.minibox.entity.MbPost" id="commentInPostMap">
        <!--帖子内容，帖子ID、帖子标题、帖子内容、帖子发表时间-->
        <id property="tid" column="tid" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="coverImg" column="cover_img" jdbcType="VARCHAR"/>
        <!--是谁发的帖子，作者ID、作者昵称、作者等级-->
        <association property="mbUser" javaType="com.ghw.minibox.entity.MbUser">
            <id property="uid" column="uid" jdbcType="INTEGER"/>
            <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
            <collection property="gameList" ofType="com.ghw.minibox.entity.MbGame">
                <id property="gid" column="gid"/>
                <result property="name" column="name"/>
            </collection>
        </association>
        <!--帖子里的所有评论，包括评论ID、评论内容、评论时间-->
        <collection property="commentList" ofType="com.ghw.minibox.entity.MbComment">
            <id property="cid" column="cid" jdbcType="INTEGER"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="createDate" column="create_date" jdbcType="TIMESTAMP"/>
            <result property="score" column="score"/>
            <!--每条评论里的回复，包括回复ID、回复日期、回复内容、回复人的UID、回复了谁-->
            <collection property="replyList" ofType="com.ghw.minibox.entity.MbReply">
                <id property="rid" column="rid" jdbcType="INTEGER"/>
                <result property="replyContent" column="reply_content" jdbcType="VARCHAR"/>
                <result property="replyWho" column="reply_who" jdbcType="INTEGER"/>
            </collection>
        </collection>
    </resultMap>
    <select id="queryUserAllCommentInPost" resultMap="commentInPostMap">
        SELECT mc.cid,
               mc.tid,
               mc.uid,
               mc.gid,
               mc.score,
               mc.content,
               mc.create_date,

               mp.title,
               mp.cover_img,

               mu.nickname,
               mr.rid,
               mr.reply_content,
               mr.reply_who,
               mg.`name`
        FROM mb_comment AS mc
                 LEFT JOIN mb_post AS mp ON (mc.tid = mp.tid)
                 LEFT JOIN mb_user AS mu ON (mu.uid = mp.uid)
                 LEFT JOIN mb_reply AS mr ON (mr.reply_uid = mc.uid)
                 LEFT JOIN mb_game AS mg ON (mg.gid = mc.gid)
        WHERE mc.uid = #{uid}
        ORDER BY mc.create_date DESC;
    </select>


    <!--新增所有列，并且返回自增主键-->
    <insert id="insert" keyProperty="tid" useGeneratedKeys="true">
        insert into minibox.mb_post(uid, bid, title, content, cover_img)
        values (#{uid}, #{bid}, #{title}, #{content}, #{coverImg})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        UPDATE mb_post
        <set>
            <if test="uid != null">
                uid = #{uid},
            </if>
            <if test="bid != null">
                bid = #{bid},
            </if>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
        </set>
        WHERE tid = #{tid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from minibox.mb_post
        where tid = #{tid}
    </delete>


</mapper>