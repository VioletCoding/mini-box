<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ghw.minibox.mapper.MbUserDao">

    <resultMap type="com.ghw.minibox.entity.MbUser" id="MbUserMap">
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="level" column="level" jdbcType="VARCHAR"/>
        <result property="walletBalance" column="wallet_balance" jdbcType="NUMERIC"/>
        <result property="userState" column="user_state" jdbcType="VARCHAR"/>
        <result property="createDate" column="create_date" jdbcType="TIMESTAMP"/>
        <result property="exp" column="exp" jdbcType="INTEGER"/>
        <result property="updateDate" column="update_date" jdbcType="TIMESTAMP"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="MbUserMap">
        select uid,
               nickname,
               username,
               password,
               description,
               level,
               wallet_balance,
               user_state,
               create_date,
               exp,
               update_date,
               state
        from mini_box.mb_user
        where uid = #{uid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MbUserMap">
        select uid,
               nickname,
               username,
               password,
               description,
               level,
               wallet_balance,
               user_state,
               create_date,
               exp,
               update_date,
               state
        from mini_box.mb_user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="MbUserMap">
        select
        uid, nickname, username, password, description, level, wallet_balance, user_state, create_date, exp,
        update_date, state
        from mini_box.mb_user
        <where>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname = #{nickname}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="description != null and description != ''">
                and description = #{description}
            </if>
            <if test="level != null and level != ''">
                and level = #{level}
            </if>
            <if test="walletBalance != null">
                and wallet_balance = #{walletBalance}
            </if>
            <if test="userState != null and userState != ''">
                and user_state = #{userState}
            </if>
            <if test="createDate != null">
                and create_date = #{createDate}
            </if>
            <if test="exp != null">
                and exp = #{exp}
            </if>
            <if test="updateDate != null">
                and update_date = #{updateDate}
            </if>
            <if test="state != null">
                and state = #{state}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="uid" useGeneratedKeys="true">
        insert into mini_box.mb_user(nickname, username, password, description, level, wallet_balance, user_state,
                                     create_date, exp, update_date, state)
        values (#{nickname}, #{username}, #{password}, #{description}, #{level}, #{walletBalance}, #{userState},
                #{createDate}, #{exp}, #{updateDate}, #{state})
    </insert>

    <insert id="insertBatch" keyProperty="uid" useGeneratedKeys="true">
        insert into mini_box.mb_user(nickname, username, password, description, level, wallet_balance, user_state,
        create_date, exp, update_date, state)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.nickname}, #{entity.username}, #{entity.password}, #{entity.description}, #{entity.level},
            #{entity.walletBalance}, #{entity.userState}, #{entity.createDate}, #{entity.exp}, #{entity.updateDate},
            #{entity.state})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="uid" useGeneratedKeys="true">
        insert into mini_box.mb_user(nickname, username, password, description, level, wallet_balance, user_state,
        create_date, exp, update_date, state)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.nickname}, #{entity.username}, #{entity.password}, #{entity.description}, #{entity.level},
            #{entity.walletBalance}, #{entity.userState}, #{entity.createDate}, #{entity.exp}, #{entity.updateDate},
            #{entity.state})
        </foreach>
        on duplicate key update
        nickname = values(nickname) , username = values(username) , password = values(password) , description =
        values(description) , level = values(level) , wallet_balance = values(wallet_balance) , user_state =
        values(user_state) , create_date = values(create_date) , exp = values(exp) , update_date = values(update_date) ,
        state = values(state)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update mini_box.mb_user
        <set>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="level != null and level != ''">
                level = #{level},
            </if>
            <if test="walletBalance != null">
                wallet_balance = #{walletBalance},
            </if>
            <if test="userState != null and userState != ''">
                user_state = #{userState},
            </if>
            <if test="createDate != null">
                create_date = #{createDate},
            </if>
            <if test="exp != null">
                exp = #{exp},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
        </set>
        where uid = #{uid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from mini_box.mb_user
        where uid = #{uid}
    </delete>

</mapper>