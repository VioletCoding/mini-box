<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ghw.minibox.mapper.MbCommentMapper">

    <resultMap type="com.ghw.minibox.entity.MbComment" id="MbCommentMap">
        <result property="cid" column="cid" jdbcType="INTEGER"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="VARCHAR"/>
        <result property="tid" column="tid" jdbcType="INTEGER"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="gid" column="gid" jdbcType="INTEGER"/>
        <result property="score" column="score" jdbcType="NUMERIC"/>
        <result property="createDate" column="create_date" jdbcType="TIMESTAMP"/>
        <result property="updateDate" column="update_date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="MbCommentMap">
        select cid,
               state,
               content,
               type,
               tid,
               uid,
               gid,
               score,
               create_date,
               update_date
        from minibox.mb_comment
        where cid = #{cid}
    </select>

    <!--通过实体作为筛选条件查询-->
    <resultMap type="com.ghw.minibox.entity.MbComment" id="queryAllMap">
        <result property="cid" column="cid" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="tid" column="tid" jdbcType="INTEGER"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="gid" column="gid" jdbcType="INTEGER"/>
        <result property="score" column="score" jdbcType="NUMERIC"/>
        <result property="createDate" column="create_date"/>
        <association property="mbUser" javaType="com.ghw.minibox.entity.MbUser">
            <id property="uid" column="uid"/>
            <result property="nickname" column="nickname"/>
        </association>

    </resultMap>
    <select id="queryAll" resultMap="queryAllMap">
        SELECT
        mc.cid, mc.tid, mc.uid, mc.gid, mc.score,mc.content,mc.create_date,
        mp.title,mp.cover_img,
        mu.nickname,mu.uid,
        mr.reply_content,mr.reply_who
        FROM mb_comment AS mc
        LEFT JOIN mb_post AS mp ON(mc.tid = mp.tid)
        LEFT JOIN mb_user AS mu ON(mu.uid = mp.uid)
        LEFT JOIN mb_reply AS mr ON(mr.reply_uid = mc.uid)
        <where>
            <if test="cid != null">
                AND mc.cid = #{cid}
            </if>
            <if test="uid != null">
                AND mc.uid = #{uid}
            </if>
        </where>
        ORDER BY mc.create_date DESC;
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="cid" useGeneratedKeys="true">
        insert into minibox.mb_comment(content, type, tid, uid, gid, score)
        values (#{content}, #{type}, #{tid}, #{uid}, #{gid}, #{score})
    </insert>

    <!--新增数据到mb_reply表-->
    <insert id="insertToMbReply" keyProperty="rid" useGeneratedKeys="true">
        insert into mb_reply(type, reply_who, reply_content, reply_uid, reply_in_post, reply_in_comment, reply_in_game)
        VALUES (#{type}, #{replyWho}, #{replyContent}, #{replyUid}, #{replyInPost}, #{replyInComment}, #{replyInGame})
    </insert>

    <insert id="insertBatch" keyProperty="cid" useGeneratedKeys="true">
        insert into minibox.mb_comment(state, content, type, tid, uid, gid, score, create_date, update_date)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.state}, #{entity.content}, #{entity.type}, #{entity.tid}, #{entity.uid}, #{entity.gid},
            #{entity.score}, #{entity.createDate}, #{entity.updateDate})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="cid" useGeneratedKeys="true">
        insert into minibox.mb_comment(state, content, type, tid, uid, gid, score, create_date, update_date)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.state}, #{entity.content}, #{entity.type}, #{entity.tid}, #{entity.uid}, #{entity.gid},
            #{entity.score}, #{entity.createDate}, #{entity.updateDate})
        </foreach>
        on duplicate key update
        state = values(state) , content = values(content) , type = values(type) , tid = values(tid) , uid = values(uid)
        , gid = values(gid) , score = values(score) , create_date = values(create_date) , update_date =
        values(update_date)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update minibox.mb_comment
        <set>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="type != null and type != ''">
                type = #{type},
            </if>
            <if test="tid != null">
                tid = #{tid},
            </if>
            <if test="uid != null">
                uid = #{uid},
            </if>
            <if test="gid != null">
                gid = #{gid},
            </if>
            <if test="score != null">
                score = #{score},
            </if>
            <if test="createDate != null">
                create_date = #{createDate},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>
        </set>
        where cid = #{cid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from minibox.mb_comment
        where cid = #{cid}
    </delete>

</mapper>